package com.parse.starter;

import java.util.ArrayList;
import java.util.List;

import com.google.android.maps.GeoPoint;
import com.google.android.maps.MapActivity;
import com.google.android.maps.MapController;
import com.google.android.maps.MapView;
import com.google.android.maps.Overlay;
import com.google.android.maps.OverlayItem;
import com.parse.ParseGeoPoint;
import com.parse.ParseObject;

import android.app.Activity;
import android.content.Intent;
import android.graphics.drawable.Drawable;
import android.location.LocationManager;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.LinearLayout;

public class NearMeActivity extends MapActivity {
	
	private static final long MINIMUM_DISTANCE_CHANGE_FOR_UPDATES = 1; // in Meters
	private static final long MINIMUM_TIME_BETWEEN_UPDATES = 1000; // in Milliseconds

	protected LocationManager locationManager;
	
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.map_overlay);
		MapView theMap = (MapView) findViewById(R.id.map_overlay);
		theMap.setBuiltInZoomControls(true);
		MapController myMapController = theMap.getController();
		
		//Currently the rotunda. Should be user's location, default to rotunda if it fails.
		myMapController.setCenter(new GeoPoint(38035681, -78503323));
		myMapController.setZoom(17);
		
		List<Overlay> mapOverlays = theMap.getOverlays();
		Drawable drawable = this.getResources().getDrawable(R.drawable.map_marker);
		FoodEventItemizedOverlay itemizedOverlay = new FoodEventItemizedOverlay(drawable, this);
		
		ArrayList<ParseObject> foodEvents = ParseApplication.getFoodItems();
		
		for (ParseObject oneEvent : foodEvents) {
			ParseGeoPoint coords = (ParseGeoPoint) oneEvent.get("coordinates");
			double lat = coords.getLatitude();
			double lon = coords.getLongitude();
			GeoPoint point = new GeoPoint((int)(lat * 1000000),(int)(lon * 1000000));
			String title = oneEvent.getString("name");
			String descrip = oneEvent.getString("description");
			FoodEventOverlayItem overlayitem = new FoodEventOverlayItem(point, title, descrip, oneEvent);
			itemizedOverlay.addOverlay(overlayitem);
		}
		
		mapOverlays.add(itemizedOverlay);
		
		
	}
	protected boolean isRouteDisplayed() {
	    return false;
	}
}
